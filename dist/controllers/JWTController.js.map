{"version":3,"sources":["../../src/controllers/JWTController.js"],"names":["req","res","api_key","headers","process","env","SECRET_KEY","token","jwt","sign","user","expiresIn","configs","token_valid","status","json","message","SignToken"],"mappings":";;;;;;;;;;;;;;;;wFAEO,iBAAyBA,GAAzB,EAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACKC,+BADL,GACiBF,IAAIG,OADrB,CACKD,OADL;;AAAA,8BAECA,YAAYE,QAAQC,GAAR,CAAYC,UAFzB;AAAA;AAAA;AAAA;;AAGOC,6BAHP,GAGeC,uBAAIC,IAAJ,CAAS,EAAEC,MAAM,UAAR,EAAT,EAA+BN,QAAQC,GAAR,CAAYC,UAA3C,EAAuD,EAAEK,WAAWC,kBAAQC,WAArB,EAAvD,CAHf;AAAA,yDAIQZ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,IAAV,EAAgBP,YAAhB,EAArB,CAJR;;AAAA;AAAA,yDAKWN,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,KAAV,EAAiBE,SAAS,eAA1B,EAArB,CALX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,S;;;;;AAFtB;;;;AACA","file":"JWTController.js","sourcesContent":["import jwt from 'jsonwebtoken'\r\nimport configs from '../configs/configs.json'\r\nexport async function SignToken(req, res) {\r\n    const { api_key } = req.headers;\r\n    if (api_key === process.env.SECRET_KEY) {\r\n        const token = jwt.sign({ user: 'WhatsApp' }, process.env.SECRET_KEY, { expiresIn: configs.token_valid })\r\n        return res.status(200).json({ status: true, token })\r\n    } else return res.status(401).json({ status: false, message: 'Check API KEY' })\r\n}"]}