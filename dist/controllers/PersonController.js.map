{"version":3,"sources":["../../src/controllers/PersonController.js"],"names":["req","res","session","query","body","phone","isgroup","prefix","APISession","getProfilePicture","ppUrl","status","json","result","pic","message","GetProfilePic","getStatus","GetPersonStatus","isOnWhatsApp","CheckNumber"],"mappings":";;;;;;;;;;;;;;;;;;;;wFAEO,iBAA6BA,GAA7B,EAAkCC,GAAlC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACKC,+BADL,GACiBF,IAAIG,KADrB,CACKD,OADL;AAAA,oCAEwBF,IAAII,IAF5B,EAEKC,KAFL,aAEKA,KAFL,EAEYC,OAFZ,aAEYA,OAFZ;AAGCC,8BAHD,GAGUD,UAAU,OAAV,GAAoB,OAH9B;AAAA;AAAA;AAAA,+BAKqBE,wBAAWN,OAAX,EAAoBO,iBAApB,CAAsCJ,QAAQE,MAA9C,CALrB;;AAAA;AAKOG,6BALP;AAAA,yDAMQT,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,IAAV,EAAgBE,QAAQ,IAAxB,EAA8BC,KAAKJ,KAAnC,EAArB,CANR;;AAAA;AAAA;AAAA;AAAA,yDAQQT,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,KAAV,EAAiBI,SAAS,OAA1B,EAArB,CARR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,a;;;;;;yFAYf,kBAA+BhB,GAA/B,EAAoCC,GAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACKC,+BADL,GACiBF,IAAIG,KADrB,CACKD,OADL;AAAA,qCAEwBF,IAAII,IAF5B,EAEKC,KAFL,cAEKA,KAFL,EAEYC,OAFZ,cAEYA,OAFZ;AAGCC,8BAHD,GAGUD,UAAU,OAAV,GAAoB,OAH9B;AAAA;AAAA;AAAA,+BAKsBE,wBAAWN,OAAX,EAAoBe,SAApB,CAA8BZ,QAAQE,MAAtC,CALtB;;AAAA;AAKOI,8BALP;AAAA,0DAMQV,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,iCAAuBD,QAAQ,IAA/B,EAAqCE,QAAQ,IAA7C,cAA2DF,MAA3D,EANR;;AAAA;AAAA;AAAA;AAAA,0DAQQV,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,KAAV,EAAiBI,SAAS,OAA1B,EAArB,CARR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeG,e;;;;;;yFAYf,kBAA2BlB,GAA3B,EAAgCC,GAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACKC,+BADL,GACiBF,IAAIG,KADrB,CACKD,OADL;AAAA,qCAEwBF,IAAII,IAF5B,EAEKC,KAFL,cAEKA,KAFL,EAEYC,OAFZ,cAEYA,OAFZ;AAGCC,8BAHD,GAGUD,UAAU,OAAV,GAAoB,OAH9B;AAAA;AAAA;AAAA,+BAKsBE,wBAAWN,OAAX,EAAoBiB,YAApB,CAAiCd,QAAQE,MAAzC,CALtB;;AAAA;AAKOI,8BALP;AAAA,0DAMQV,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,iCAAuBD,QAAQ,IAA/B,EAAqCE,QAAQ,IAA7C,cAA2DF,MAA3D,EANR;;AAAA;AAAA;AAAA;AAAA,0DAQQV,IAAIU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAED,QAAQ,KAAV,EAAiBI,SAAS,OAA1B,EAArB,CARR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeK,W;;;;;AA1BtB","file":"PersonController.js","sourcesContent":["import { APISession } from '../util/SessionUtil'\r\n\r\nexport async function GetProfilePic(req, res) {\r\n    const { session } = req.query\r\n    const { phone, isgroup } = req.body\r\n    let prefix = isgroup ? '@g.us' : '@c.us'\r\n    try {\r\n        const ppUrl = await APISession[session].getProfilePicture(phone + prefix) // leave empty to get your own\r\n        return res.status(200).json({ status: true, result: true, pic: ppUrl })\r\n    } catch (e) {\r\n        return res.status(400).json({ status: false, message: 'Error' })\r\n    }\r\n}\r\n\r\nexport async function GetPersonStatus(req, res) {\r\n    const { session } = req.query\r\n    const { phone, isgroup } = req.body\r\n    let prefix = isgroup ? '@g.us' : '@c.us'\r\n    try {\r\n        const status = await APISession[session].getStatus(phone + prefix) // leave empty to get your own\r\n        return res.status(200).json({ status: true, result: true, status: status })\r\n    } catch (e) {\r\n        return res.status(400).json({ status: false, message: 'Error' })\r\n    }\r\n}\r\n\r\nexport async function CheckNumber(req, res) {\r\n    const { session } = req.query\r\n    const { phone, isgroup } = req.body\r\n    let prefix = isgroup ? '@g.us' : '@c.us'\r\n    try {\r\n        const status = await APISession[session].isOnWhatsApp(phone + prefix) // leave empty to get your own\r\n        return res.status(200).json({ status: true, result: true, status: status })\r\n    } catch (e) {\r\n        return res.status(400).json({ status: false, message: 'Error' })\r\n    }\r\n}\r\n"]}