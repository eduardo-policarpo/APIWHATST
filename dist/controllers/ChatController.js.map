{"version":3,"sources":["../../src/controllers/ChatController.js"],"names":["req","res","session","query","chatArray","APISession","loadChats","Chats","allChats","chats","i","length","count","id","newDate","moment","unix","t","format","messagesBody","messages","LastMessage","JSON","parse","LengthMessages","MessagePresence","Name","phonePP","jid","replace","name","message","conversation","PPIMAGE","getProfilePicture","chatId","time","phone","title","image","lastchat","status","json","GetChats","body","isgroup","prefix","isOnWhatsApp","Phone_Number","loadMessages","GetMessages","unread","chatRead","ReadMessage","presencetype","presencestatus","Presence","available","composing","recording","paused","updatePresence","UpdatePresence","messageid","isdelete","timefortyping","messagescontent","sleep","values","filter","key","deleteMessage","remoteJid","fromMe","clearMessage","DeleteMessage"],"mappings":"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","file":"ChatController.js","sourcesContent":["import moment from 'moment'\r\nimport { APISession } from '../util/SessionUtil'\r\nimport { Presence } from '@adiwajshing/baileys'\r\n\r\nexport async function GetChats(req, res) {\r\n    const { session } = req.query\r\n    let chatArray = []\r\n    try {\r\n        const Chats = await APISession[session].loadChats()\r\n        let allChats = Chats.chats\r\n        for (let i = 0; i < allChats.length; i++) {\r\n            let count = 1\r\n            let id = count + i\r\n            let newDate = moment.unix(allChats[i].t).format('DD/MM/YYYY HH:MM:ss')\r\n            let messagesBody = allChats[i].messages\r\n            let LastMessage = JSON.parse(JSON.stringify(messagesBody))\r\n            let LengthMessages = LastMessage.length - 1\r\n            let MessagePresence = null\r\n            let Name = null\r\n            let phonePP = allChats[i].jid.replace('@s.whatsapp.net', '')\r\n            if (allChats[i].name) Name = allChats[i].name\r\n            else Name = allChats[i].jid.replace('@s.whatsapp.net', '')\r\n\r\n            if (LastMessage[LengthMessages].message) MessagePresence = LastMessage[LengthMessages].message.conversation\r\n            else MessagePresence = 'Não foi possível carregar as mensagens anteriores'\r\n            let PPIMAGE = null\r\n            try {\r\n                PPIMAGE = await APISession[session].getProfilePicture(`${phonePP}@c.us`)\r\n            } catch (e) {\r\n                PPIMAGE = 'https://upload.wikimedia.org/wikipedia/en/e/ee/Unknown-person.gif'\r\n            }\r\n\r\n            chatArray = [...chatArray, { chatId: id, time: newDate, phone: allChats[i].jid.replace('@s.whatsapp.net', ''), title: Name, image: PPIMAGE, lastchat: MessagePresence }]\r\n        }\r\n        return res.status(200).json(chatArray)\r\n    } catch (e) {\r\n        return res.status(400).json({ message: 'Session closed' })\r\n    }\r\n}\r\n\r\nexport async function GetMessages(req, res) {\r\n    const { session } = req.query\r\n    const { phone, isgroup } = req.body\r\n    let prefix = isgroup ? '@g.us' : '@c.us'\r\n    try {\r\n        const Phone_Number = await APISession[session].isOnWhatsApp(`${phone}${prefix}`)\r\n        const messages = await APISession[session].loadMessages(Phone_Number.jid, 25)\r\n        return res.status(200).json(messages)\r\n    } catch (e) {\r\n        return res.status(400).json({ status: false, message: 'Error' })\r\n    }\r\n}\r\n\r\nexport async function ReadMessage(req, res) {\r\n    const { session } = req.query\r\n    const { phone, isgroup, unread } = req.body\r\n    let prefix = isgroup ? '@g.us' : '@c.us'\r\n    try {\r\n        const Phone_Number = await APISession[session].isOnWhatsApp(`${phone}${prefix}`)\r\n        if (!unread) await APISession[session].chatRead(Phone_Number.jid)\r\n        if (unread) await APISession[session].chatRead(Phone_Number.jid, 'unread')\r\n        return res.status(200).json({ status: false, message: 'Ok' })\r\n    } catch (e) {\r\n        return res.status(400).json({ status: false, message: 'Error' })\r\n    }\r\n}\r\n\r\nexport async function UpdatePresence(req, res) {\r\n    const { session } = req.query\r\n    const { phone, isgroup, presencetype } = req.body\r\n    let prefix = isgroup ? '@g.us' : '@c.us'\r\n    let presencestatus = null\r\n    if (presencetype === 'available') presencestatus = Presence.available\r\n    if (presencetype === 'composing') presencestatus = Presence.composing\r\n    if (presencetype === 'recording') presencestatus = Presence.recording\r\n    if (presencetype === 'paused') presencestatus = Presence.paused\r\n    try {\r\n        const Phone_Number = await APISession[session].isOnWhatsApp(`${phone}${prefix}`)\r\n        await APISession[session].updatePresence(Phone_Number.jid, presencestatus)\r\n        return res.status(200).json({ status: false, message: 'Ok' })\r\n    } catch (e) {\r\n        return res.status(400).json({ status: false, message: 'Error' })\r\n    }\r\n}\r\n\r\nexport async function DeleteMessage(req, res) {\r\n    const { session } = req.query\r\n    const { phone, isgroup, messageid, isdelete } = req.body\r\n    let prefix = isgroup ? '@g.us' : '@c.us'\r\n    let timefortyping = message.length * 50\r\n    try {\r\n        const Phone_Number = await APISession[session].isOnWhatsApp(`${phone}${prefix}`)\r\n        const messages = await APISession[session].loadMessages(Phone_Number.jid)\r\n        let messagescontent = messages.messages\r\n        await APISession[session].updatePresence(Phone_Number.jid, Presence.composing)\r\n        await sleep(timefortyping)\r\n        const values = messagescontent.filter(messagescontent => messagescontent.key.id === messageid)\r\n        if (isdelete) await APISession[session].deleteMessage(`${Phone_Number.jid}`, { id: messagescontent.key.id, remoteJid: `${Phone_Number.jid}`, fromMe: true }) // will delete the sent message for everyone!\r\n        if (!isdelete) await APISession[session].clearMessage(`${Phone_Number.jid}`, { id: messagescontent.key.id, remoteJid: `${Phone_Number.jid}`, fromMe: true }) // will delete the sent message for only you!\r\n        return res.status(200).json({ status: true, message: 'Message deleted' })\r\n    } catch (e) {\r\n        return res.status(400).json({ status: false, message: 'Error' })\r\n    }\r\n}\r\n"]}